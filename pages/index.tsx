import type { NextPage, GetServerSideProps } from 'next';
import Head from 'next/head';

import { Product, FooterBanner, HeroBanner } from '../components';

import { client } from '../lib/client';

import { IProduct, IBanner } from '../types';

interface Props {
    products: IProduct[];
    bannerData: IBanner[];
}

const Home: NextPage<Props> = ({ products, bannerData }: Props) => {
    return (
        <>
            <Head>
                <title>Ecommerce</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <HeroBanner
                heroBanner={
                    bannerData.length > 0 ? bannerData[0] : ({} as IBanner)
                }
            />
            <div className="w-full text-center pt-10 pb-10">
                <h2 className="font-title font-bold text-4xl">
                    Best Seller Products
                </h2>
                <p className="text-black/70">Speakers of many variations</p>
            </div>
            <div className="flex flex-row items-center justify-center gap-4 w-full flex-wrap mt-5">
                {products?.map((product: IProduct) => (
                    <Product key={product._id} product={product} />
                ))}
            </div>
            <FooterBanner
                footerBanner={
                    bannerData.length > 0 ? bannerData[0] : ({} as IBanner)
                }
            />
        </>
    );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
    const query = '*[_type == "product"]';
    const products: IProduct[] = await client.fetch(query);

    const bannerQuery = '*[_type == "banner"]';
    const bannerData: IBanner[] = await client.fetch(bannerQuery);

    return {
        props: {
            products,
            bannerData
        }
    };
};
